pipeline:
  name: react-frotend
  identifier: reactfrotend
  projectIdentifier: Default_Project_1662995130999
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: abhidev91
        build: <+input>
  stages:
    - stage:
        name: Build and push to dockerhub
        identifier: Build_and_push_to_dockerhub
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesHosted
            spec:
              identifier: k8s-hosted-infra
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: Build and push to dockerhub
                  identifier: Build_and_push_to_dockerhub
                  spec:
                    connectorRef: newdocker
                    repo: vampireking/harenessdemo
                    tags:
                      - <+pipeline.sequenceId>
    - stage:
        name: deploy to minikube
        identifier: deploy_to_minikube
        description: ""
        type: Deployment
        spec:
          serviceConfig:
            serviceRef: frontend
            serviceDefinition:
              spec:
                variables: []
                artifacts:
                  primary:
                    spec:
                      connectorRef: newdocker
                      imagePath: vampireking/harenessdemo
                      tag: <+input>
                    type: DockerRegistry
                manifests:
                  - manifest:
                      identifier: test
                      type: K8sManifest
                      spec:
                        store:
                          type: Github
                          spec:
                            connectorRef: abhidev91
                            gitFetchType: Branch
                            paths:
                              - manifest.yaml
                            branch: master
                        valuesPaths:
                          - values.yaml
                        skipResourceVersioning: false
              type: Kubernetes
          infrastructure:
            environmentRef: test
            infrastructureDefinition:
              type: KubernetesDirect
              spec:
                connectorRef: minikubecluster
                namespace: default
                releaseName: release-<+INFRA_KEY>
            allowSimultaneousDeployments: false
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    delegateSelectors:
                      - harness-kubernetes-delegate
                  failureStrategies: []
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
